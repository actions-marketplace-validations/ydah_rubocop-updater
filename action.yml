name: rubocop-updater
author: ydah <t.yudai92@gmail.com>
description: Update RuboCop and regenerate `.rubocop_todo.yml` to exclude all newly added offense cops and create Pull Request.
branding:
  color: red
  icon: git-pull-request
inputs:
  github_token:
    description: GitHub access token to run another workflows from new pull request.
    required: false
  label:
    description: Label to be given to the pull request.
    required: false
    default: ""
  mode:
    description: Switching modes of operation.
    required: false
    default: "normal"
  update_target:
    description: RuboCop (or extension) to be updated.
    required: false
    default: rubocop
  conservative_update:
    description: Is conservative update?
    required: false
    default: "true"
  rubocop_options:
    description: RuboCop client command line options for --auto-gen-config.
    required: false
    default: ""
  preparation_command:
    description: Preparation commands to be plugged in after the repository is checked out and Ruby is set up.
    required: false
    default: ""
runs:
  using: composite
  steps:
    - name: Checking out repository
      uses: actions/checkout@v3
      with:
        ref: "${{ github.event.pull_request.base.ref }}"
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
    - name: Run preparation command
      run: ${{ inputs.preparation_command }}
      if: inputs.preparation_command != ""
      shell: bash
    - name: Setup git & bundler
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git switch --create update-${{ inputs.update_target }}-${{ github.run_number }}
        bundle install
      shell: bash
    - name: Regenerate `.rubocop_todo.yml`
      run: |
        bundle exec rubocop --auto-gen-config ${{ inputs.rubocop_options }}
        git add -u
        git commit -m "rubocop --auto-gen-config ${{ inputs.rubocop_options }}"
      if: ${{ inputs.mode }} != "quickly"
      continue-on-error: true
      shell: bash
    - name: Update RuboCop (extension)
      run: |
        for gemfile in $(ls Gemfile* | grep -v .lock); do
          BUNDLE_GEMFILE="${gemfile}" bundle update ${{ inputs.conservative_update == 'true' && '--conservative' || '' }} ${{ inputs.update_target }}
        done
        git add -u
        git commit -m "bundle update ${{ inputs.conservative_update == 'true' && '--conservative' || '' }} ${{ inputs.update_target }}"
      shell: bash
    - name: Regenerate `.rubocop_todo.yml`
      run: |
        bundle exec rubocop --auto-gen-config ${{ inputs.rubocop_options }}
        git add -u
        git commit -m "rubocop --auto-gen-config ${{ inputs.rubocop_options }}"
      continue-on-error: true
      shell: bash
    - name: Create pull request
      run: |
        git push --set-upstream origin update-${{ inputs.update_target }}-${{ github.run_number }}
        version=`bundle info ${{ inputs.update_target }} | grep -m 1 -o "[0-9]*\.[0-9]*\.[0-9]*"`
        info=`bundle info ${{ inputs.update_target }}`
        body=$(cat << EOS
        ## Summary
        Updated ${{ inputs.update_target }} version to ${version}
        ## Updated version information
        ${info}
        ### Note
        This pull request was generated by [rubocop-updater](https://github.com/ydah/rubocop-updater).
        EOS
        )
        gh pr create --title "Update ${{ inputs.update_target }} version to ${version}" --body "${body}" --label="${{ inputs.label }}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token || github.token }}
